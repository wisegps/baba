package com.wise.baba.db.dao;

import android.database.sqlite.SQLiteDatabase;

import java.util.Map;

import de.greenrobot.dao.AbstractDao;
import de.greenrobot.dao.AbstractDaoSession;
import de.greenrobot.dao.identityscope.IdentityScopeType;
import de.greenrobot.dao.internal.DaoConfig;

import com.wise.baba.db.dao.Suggestion;
import com.wise.baba.db.dao.FriendData;
import com.wise.baba.db.dao.FriendAuth;

import com.wise.baba.db.dao.SuggestionDao;
import com.wise.baba.db.dao.FriendDataDao;
import com.wise.baba.db.dao.FriendAuthDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see de.greenrobot.dao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig suggestionDaoConfig;
    private final DaoConfig friendDataDaoConfig;
    private final DaoConfig friendAuthDaoConfig;

    private final SuggestionDao suggestionDao;
    private final FriendDataDao friendDataDao;
    private final FriendAuthDao friendAuthDao;

    public DaoSession(SQLiteDatabase db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        suggestionDaoConfig = daoConfigMap.get(SuggestionDao.class).clone();
        suggestionDaoConfig.initIdentityScope(type);

        friendDataDaoConfig = daoConfigMap.get(FriendDataDao.class).clone();
        friendDataDaoConfig.initIdentityScope(type);

        friendAuthDaoConfig = daoConfigMap.get(FriendAuthDao.class).clone();
        friendAuthDaoConfig.initIdentityScope(type);

        suggestionDao = new SuggestionDao(suggestionDaoConfig, this);
        friendDataDao = new FriendDataDao(friendDataDaoConfig, this);
        friendAuthDao = new FriendAuthDao(friendAuthDaoConfig, this);

        registerDao(Suggestion.class, suggestionDao);
        registerDao(FriendData.class, friendDataDao);
        registerDao(FriendAuth.class, friendAuthDao);
    }
    
    public void clear() {
        suggestionDaoConfig.getIdentityScope().clear();
        friendDataDaoConfig.getIdentityScope().clear();
        friendAuthDaoConfig.getIdentityScope().clear();
    }

    public SuggestionDao getSuggestionDao() {
        return suggestionDao;
    }

    public FriendDataDao getFriendDataDao() {
        return friendDataDao;
    }

    public FriendAuthDao getFriendAuthDao() {
        return friendAuthDao;
    }

}
